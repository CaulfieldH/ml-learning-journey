# -*- coding: utf-8 -*-
"""Практика Лекция 8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JN9PQbgBhcpd87RUDZAMuqzrj3jgts-5

## Загружаем данные по ценам на недвижимость в Бостоне. Стандартный учебный датасет для задачи регресии
"""

import sys

print("Python executable:", sys.executable)
print("Python path:", sys.path[0])

import pandas as pd
import numpy as np

data_url = "http://lib.stat.cmu.edu/datasets/boston"
raw_df = pd.read_csv(data_url, sep="\s+", skiprows=22, header=None)
data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])
target = raw_df.values[1::2, 2]

df = pd.DataFrame(data, columns = ['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT'])
df['MEDV'] = target

df.head()

"""## Обработать данные"""

df.info()
  
"""пропусков и пропущенных значений - можно ничего не делать

## Разделить данные
"""

from sklearn.model_selection import train_test_split

df.columns

# Отделить колонки с признаками от колонки с целевой переменной (которую прогнозируем)
# это нужно для корректной работы sklearn
X = df[['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT']]
y = df['MEDV']

print(X)

print(y)

# Разделить данные на часть для обучения и часть для проверки
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

print(X_train)

print(X_test)

print(y_train)

print(y_test)

"""## Делаем модель"""

from sklearn.linear_model import LinearRegression

lr = LinearRegression()

lr.fit(X_train, y_train)

print(lr.coef_)

"""## Оценить качество модели на отложенных данных"""

lr.predict(X_test)

## Оцениваем на глаз
pd.DataFrame([y_test.values, lr.predict(X_test)]).T

## Оцениваем при помощи MSE
from sklearn.metrics import mean_squared_error

print(mean_squared_error(y_test, lr.predict(X_test)))

print(mean_squared_error(y_train, lr.predict(X_train)))
